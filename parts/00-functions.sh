app_name="$0"
app_ver="dev"

default_cfg="./ddbot.cfg"

function confirmY() {
  local answer
  echo -ne "$* (Y/n) "
  read answer
  case ${answer,,} in
    n|no)
      return 1
      ;;
    *)
      return 0
      ;;
  esac
}

function confirmN() {
  local answer
  echo -ne "$* (y/N) "
  read answer
  case ${answer,,} in
    y|yes)
      return 0
      ;;
    *)
      return 1
      ;;
  esac
}

function notify() {
  local prompt=$1
  shift
  local color=$1
  shift
  echo -e "[\e[${color}m ${prompt} \e[0m] $*"
}

function info() {
  notify "INFO" "1;34" "$*"
}

function error() {
  notify "ERROR" "0;31" "$*"
}

function errorAndExit() {
  local exit_code=$1
  shift
  error "$*"
  exit $exit_code
}

function warn() {
  notify "WARN" "0;33" "$*"
}

function debug() {
  notify "DEBUG" "0;37" "$*"
}

function usage() {
  echo "Usage:"
  echo " $app_name [OPTIONS]"
  echo
  echo "Configuration file is needed."
  echo "Run without configuration file will generate new configuration file"
  echo
  echo "Options:"
  echo "  -c, --config string   Path of configuration file (Default is $default_cfg)"
  echo "      --debug           Enable debug mode"
  echo "  -h, --help            Print help"
}

function writecfg() {
  echo "$*" >> $CFG
}
function gen_cfg() {
  echo "# Generated by $app_name" > $CFG
  writecfg
  writecfg "NET_IP=${NET_IP}"
  writecfg "NET_MASK=${NET_MASK}"
  writecfg "NET_MASK_NUM=${NET_MASK_NUM}"
  writecfg "NET_GATEWAY=${NET_GATEWAY}"
  writecfg "NET_DNS=(${NET_DNS:-8.8.8.8})"
  writecfg
  writecfg "# Write networkd config after dd"
  writecfg "WRITE_NETWORKD="
  writecfg
  writecfg "SYS_DISK=${SYS_DISK}"
  writecfg
  writecfg "# TODO: fill this"
  writecfg "IMAGE_URL="
  writecfg
  writecfg "# Scale root partition after dd"
  writecfg "# Value is format of your root partition"
  writecfg "# For now only support btrfs. PR is welcomed."
  writecfg "#SCALE_PARTITION=btrfs"
  writecfg
  writecfg "MOUNT_OPTIONS=mount.btrfs -o subvol=xxx"
  writecfg "NETWORKD_DIR=/etc/systemd/networkd/"
  writecfg
  writecfg "# We recommend to use Debian 11 or higher."
  writecfg "# For other debian-based distributions, we cannot ensure it works."
  writecfg "# !! Non-debian-based distributions are not supported!"
  writecfg "# If you insist, set IGNORE_DISTRO to 1"
  writecfg "IGNORE_DISTRO="
  writecfg
  writecfg "# We recommend to use x86_64."
  writecfg "# For other architecture, we cannot ensure it works."
  writecfg "# If you insist, set IGNORE_ARCH to 1"
  writecfg "IGNORE_ARCH="
}

function parse_cfg() {
  . $CFG
  [[ $NET_IP ]] && [[ $NET_MASK ]] && [[ $NET_GATEWAY ]] && [[ $NET_DNS ]] && [[ $IMAGE_URL ]] && return
  errorAndExit 3 "Incomplete configuration."
}

function check_file() {
  local file=$1
  [[ -f $file ]] && return
  [[ -d $file ]] && errorAndExit 2 "$file is a directory. Please remove it and try again."
  return 1
}
